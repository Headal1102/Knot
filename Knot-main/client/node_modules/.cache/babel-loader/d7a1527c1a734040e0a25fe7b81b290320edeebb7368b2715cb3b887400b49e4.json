{"ast":null,"code":"var _jsxFileName = \"c:\\\\knot\\\\Knot-main\\\\client\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/Login.css';\nimport Session from 'react-session-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [id, setId] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  let localStorage = window.localStorage;\n  const handleNavigate = path => {\n    navigate(path);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const userData = {\n      userId: id,\n      userPsw: password\n    };\n\n    // 로그인 API 호출\n    const response = await fetch('http://localhost:8080/api/login', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    if (response.ok) {\n      const jsonResponse = await response.json();\n      Session.set(\"userId\", id);\n      sessionStorage.setItem(\"userId\", id);\n      navigate('/main'); // 성공 시 홈으로 이동\n    } else {\n      const errorData = await response.json();\n      setErrorMessage(errorData.message || '로그인 실패'); // 실패 시 오류 메시지 설정\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"logo\",\n      children: \"KNOT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"id\",\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"\\uC544\\uC774\\uB514\",\n          value: id,\n          onChange: e => setId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remember-and-find\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), \"\\uC544\\uC774\\uB514 \\uAE30\\uC5B5\\uD558\\uAE30\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"find_idfw-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"find_idfw\",\n            onClick: () => handleNavigate('/FindID'),\n            children: \"\\uC544\\uC774\\uB514\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"find_idfw\",\n            onClick: () => handleNavigate('/FindPw'),\n            children: \"/\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"register-link\",\n      onClick: () => handleNavigate('/signup'),\n      children: \"\\uC544\\uC9C1 \\uD68C\\uC6D0\\uC774 \\uC544\\uB2C8\\uC2E0\\uAC00\\uC694?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"fMc/H80BFY4n7nBAWg0kl8m5ncA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Session","jsxDEV","_jsxDEV","Login","_s","navigate","id","setId","password","setPassword","errorMessage","setErrorMessage","localStorage","window","handleNavigate","path","handleSubmit","e","preventDefault","userData","userId","userPsw","response","fetch","method","headers","body","JSON","stringify","ok","jsonResponse","json","set","sessionStorage","setItem","errorData","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","name","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["c:/knot/Knot-main/client/src/pages/Login.jsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../css/Login.css';\r\nimport Session from 'react-session-api';\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n\r\n  const [id, setId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\nlet localStorage=window.localStorage;\r\n\r\n  const handleNavigate = (path) => {\r\n    navigate(path); \r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      userId: id,\r\n      userPsw: password,\r\n    };\r\n\r\n    // 로그인 API 호출\r\n    const response = await fetch('http://localhost:8080/api/login', {\r\n      method:\"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(userData),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const jsonResponse = await response.json();\r\n      Session.set(\"userId\",id);\r\n      sessionStorage.setItem(\"userId\",id);\r\n      navigate('/main'); // 성공 시 홈으로 이동\r\n    } else {\r\n      const errorData = await response.json();\r\n      setErrorMessage(errorData.message || '로그인 실패'); // 실패 시 오류 메시지 설정\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1 className=\"logo\">KNOT</h1>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      <form onSubmit={handleSubmit} className=\"login-form\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            name='id'\r\n            className='input'\r\n            type=\"text\"\r\n            placeholder=\"아이디\"\r\n            value={id}\r\n            onChange={(e) => setId(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <input\r\n            name='password'\r\n            className='input'\r\n            type=\"password\"\r\n            placeholder=\"비밀번호\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"remember-and-find\">\r\n          <div className=\"checkbox-group\">\r\n            <label>\r\n              <input type=\"checkbox\" name='check' />\r\n              아이디 기억하기\r\n            </label>\r\n          </div>\r\n          <div className=\"find_idfw-container\">\r\n            <span className='find_idfw' onClick={() => handleNavigate('/FindID')}>아이디</span>\r\n            <span className='find_idfw' onClick={() => handleNavigate('/FindPw')}>/비밀번호 찾기</span>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"login-button\" >로그인</button>\r\n      </form>\r\n      <span className='register-link' onClick={() => handleNavigate('/signup')}>\r\n        아직 회원이 아니신가요?\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}